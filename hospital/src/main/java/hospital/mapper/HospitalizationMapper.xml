<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hospital.mapper.HospitalizationMapper">

<sql id="HospitalizationBasseColumns">
	HOSPITALIZATION_NUM, BED_NUM, PATIENT_NUM, IN_DATE, OUT_DATE, HOSPITALIZATION_STATUS, DOC_NUM, NUR_NUM
</sql>

<insert id="hospitalizationInsert" parameterType="HospitalizationDTO">
	insert into hospitalization(<include refid="HospitalizationBasseColumns" /> )
	values (#{hospitalizationNum},#{bedNum},#{patientNum}
			,#{inDate},#{outDate},#{hospitalizationStatus}
			,#{docNum},#{nurNum})
</insert>

<select id="hospitalizationSelectList" resultType="HospitalizationDTO" parameterType="startEndPage">
	select * from (
		select ROW_NUMBER() over (order by HOSPITALIZATION_NUM) as rn,
				<include refid="HospitalizationBasseColumns"/>
		from hospitalization
	<trim prefix="where" prefixOverrides="AND | OR">
		<if test="searchWord != null">
		(HOSPITALIZATION_NUM like '%' || #{searchWord} ||'%'
		or PATIENT_NUM like '%' || #{searchWord} || '%')
		</if>
	</trim>
	)
	where rn between #{startRow} and #{endRow}
</select>

<select id="hospitalizatonCount" parameterType="string" resultType="integer">
	select count(*) from hospitalization
	<trim prefix="where" prefixOverrides="AND | OR">
		<if test="searchWord != null">
		(HOSPITALIZATION_NUM like '%' || #{searchWord} ||'%'
		or PATIENT_NUM like '%' || #{searchWord} || '%')
		</if>
	</trim>
</select>

<select id="hospitalizationSelectOne" resultType="HospitalizationDTO" parameterType="string">
	select <include refid="HospitalizationBasseColumns" />
	from hospitalization
	where HOSPITALIZATION_NUM = #{hospitalizationNum}
</select>

<update id="hospitalizationUpdate" parameterType="HospitalizationDTO">
	update hospitalization
	<trim prefix="set" suffixOverrides=",">
		BED_NUM=#{bedNum}, 
		PATIENT_NUM=#{patientNum},
		IN_DATE=#{inDate},
		OUT_DATE=#{outDate},
		HOSPITALIZATION_STATUS=#{hospitalizationStatus},
		DOC_NUM=#{docNum},
		NUR_NUM=#{nurNum}
	</trim>
	where HOSPITALIZATION_NUM = #{hospitalizationNum}
</update>

<delete id="hospitalizationDelete" parameterType="string">
	delete from hospitalization
	where HOSPITALIZATION_NUM = #{hospitalizationNum}
</delete>

<!-- emergencyPatient -->
<sql id="EmergencyPatientBaseColumns">
	EMERPATIENT_NUM, EMERBED_NUM, PATIENT_NUM, IN_DATE, OUT_DATE, DOC_NUM, NUR_NUM, HOSPITALIZATION_STATUS
</sql>

<select id="emerHospitalizationSelectList" resultType="EmergencyPatientDTO" parameterType="startEndPage">
	select * from (
		select ROW_NUMBER() over (order by EMERPATIENT_NUM) as rn,
				<include refid="EmergencyPatientBaseColumns"/>
		from EMERGENCY_PATIENT
	<trim prefix="where" prefixOverrides="AND | OR">
	<if test="searchWord != null">
		(EMERPATIENT_NUM like '%' || #{searchWord} ||'%'
		or PATIENT_NUM like '%' || #{searchWord} || '%')
	</if>
	</trim>
	)
	where rn between #{startRow} and #{endRow}
</select>

<select id="emerHospitalizatonCount" parameterType="string" resultType="integer">
	select count(*) from EMERGENCY_PATIENT
	<trim prefix="where" prefixOverrides="AND | OR">
	<if test="searchWord != null">
		(EMERPATIENT_NUM like '%' || #{searchWord} ||'%'
		or PATIENT_NUM like '%' || #{searchWord} || '%')
	</if>
	</trim>
</select>

<insert id="emerInsert" parameterType="EmergencyPatientDTO">
	insert into EMERGENCY_PATIENT(<include refid="EmergencyPatientBaseColumns" /> )
	values (#{emerPatientNum},#{emerBedNum},#{patientNum}
			,#{inDate},#{outDate}
			,#{docNum},#{nurNum},#{hospitalizationStatus}
			)
</insert>

<select id="emerSelectOne" resultType="EmergencyPatientDTO" parameterType="string">
	select <include refid="EmergencyPatientBaseColumns"/>
	from EMERGENCY_PATIENT
	where EMERPATIENT_NUM = #{emerPatientNum}
</select>

<update id="emerUpdate" parameterType="EmergencyPatientDTO">
	update EMERGENCY_PATIENT
	<trim prefix="set" suffixOverrides=",">
		EMERBED_NUM=#{emerBedNum}, 
		PATIENT_NUM=#{patientNum},
		IN_DATE=#{inDate},
		OUT_DATE=#{outDate},
		HOSPITALIZATION_STATUS=#{hospitalizationStatus},
		DOC_NUM=#{docNum},
		NUR_NUM=#{nurNum}
	</trim>
	where EMERPATIENT_NUM = #{emerPatientNum}
</update>

<delete id="emerDelete" parameterType="string">
	delete from EMERGENCY_PATIENT
	where EMERPATIENT_NUM = #{emerPatientNum}
</delete>

<update id="bedStatusUpdate" parameterType="HospitalizationDTO">
    MERGE INTO bed b
    USING hospitalization h
    ON (b.BED_NUM = h.BED_NUM 
        AND h.HOSPITALIZATION_STATUS IN ('입원', '퇴원') 
        AND h.HOSPITALIZATION_NUM = #{hospitalizationNum})
    WHEN MATCHED THEN
        UPDATE SET b.BED_STATUS = CASE
                                      WHEN h.HOSPITALIZATION_STATUS = '입원' THEN '사용중'
                                      WHEN h.HOSPITALIZATION_STATUS = '퇴원' THEN '사용가능'
                                  END
</update>

<update id="emerBedStatusUpdate" parameterType="EmergencyPatientDTO">
	MERGE INTO emergency b
    USING EMERGENCY_PATIENT e
    ON (b.EMERBED_NUM = e.EMERBED_NUM 
        AND e.HOSPITALIZATION_STATUS IN ('입원', '퇴원') 
        AND e.EMERPATIENT_NUM = #{emerPatientNum})
    WHEN MATCHED THEN
        UPDATE SET b.EMERBED_STATUS = CASE
                                      WHEN e.HOSPITALIZATION_STATUS = '입원' THEN '사용중'
                                      WHEN e.HOSPITALIZATION_STATUS = '퇴원' THEN '사용가능'
                                  END
</update>

<update id="bedStatusNew" parameterType="HospitalizationDTO">
	MERGE INTO bed b
	USING (
	    SELECT b.BED_NUM AS BED_NUM,
	           CASE
	               WHEN h.BED_NUM IS NULL THEN '사용가능'
	               ELSE '사용중'
	           END AS NEW_BED_STATUS
	    FROM bed b
	    LEFT JOIN hospitalization h
	        ON b.BED_NUM = h.BED_NUM
	) status_update
	ON (b.BED_NUM = status_update.BED_NUM)
	WHEN MATCHED THEN
	    UPDATE SET b.BED_STATUS = status_update.NEW_BED_STATUS
</update>

<update id="emerBedStatusNew" parameterType="EmergencyPatientDTO">
	MERGE INTO emergency b
	USING (
	    SELECT b.EMERBED_NUM AS BED_NUM,
	           CASE
	               WHEN h.EMERBED_NUM IS NULL THEN '사용가능'
	               ELSE '사용중'
	           END AS NEW_BED_STATUS
	    FROM emergency b
	    LEFT JOIN emergency_patient h
	        ON b.EMERBED_NUM = h.EMERBED_NUM
	) status_update
	ON (b.EMERBED_NUM = status_update.BED_NUM)
	WHEN MATCHED THEN
	    UPDATE SET b.EMERBED_STATUS = status_update.NEW_BED_STATUS
</update>

<update id="bedStatusDelUpdate" parameterType="string">
	UPDATE bed
    SET BED_STATUS = '사용가능'
    WHERE BED_NUM IN (
        SELECT BED_NUM
        FROM hospitalization
        WHERE HOSPITALIZATION_NUM = #{hospitalizationNum}
    )
</update>

<update id="emerBedStatusDelUpdate" parameterType="string">
	UPDATE emergency
    SET emerBED_STATUS = '사용가능'
    WHERE emerBED_NUM IN (
        SELECT emerBED_NUM
        FROM emergency_patient
        WHERE EMERPATIENT_NUM = #{emerPatientNum}
    )
</update>


</mapper>